variables:
  NAMESPACE: "rai/clientportal"

.expand_env: &expand_env
  before_script:
   - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
   # WEIRD: Converting file environment variables from secure Gitlab
   - ENV_FILE='.env-reporting' && echo "$ENV" > "$ENV_FILE" && ENV="$ENV_FILE"
   - ENV_FILE='.env-reporting-front' && echo "$ENV_FRONT" > "$ENV_FILE" && ENV_FRONT="$ENV_FILE"
   - ENV_FILE='.env-order-portal' && echo "$ENV_ORDER" > "$ENV_FILE" && ENV_ORDER="$ENV_FILE"
   - ENV_FILE='.env-db_recon_ai_db' && echo "$ENV_DB_AI" > "$ENV_FILE" && ENV_DB_AI="$ENV_FILE"
   - ENV_FILE='.env-db_client_portal_db' && echo "$ENV_DB_PORTAL" > "$ENV_FILE" && ENV_DB_PORTAL="$ENV_FILE"

.env_dev: &env_dev
  environment:
    name: dev
  variables:
    ROOT_PATH: /srv/recon
    PUBLIC_PORT: 8080
    PUBLIC_PORT_FRONT: 8081
    PUBLIC_PORT_ORDER: 8082
    DOCKER_NETWORK: recon
    ENV: $env_reporting
    ENV_FRONT: $env_reporting_front
    ENV_ORDER: $env_order_portal
    ENV_DB_AI: $env_db_recon_ai_db
    ENV_DB_PORTAL: $env_db_client_portal_db
  only:
    refs:
    - dev
    - develop
  tags:
  - recon-dev

.env_prod: &env_prod
  environment:
    name: prod
  variables:
    ROOT_PATH: /srv/recon
    PUBLIC_PORT: 8080
    PUBLIC_PORT_FRONT: 8081
    PUBLIC_PORT_ORDER: 8082
    DOCKER_NETWORK: recon
    ENV: $env_reporting
    ENV_FRONT: $env_reporting_front
    ENV_ORDER: $env_order_portal
    ENV_DB_AI: $env_db_recon_ai_db
    ENV_DB_PORTAL: $env_db_client_portal_db
  only:
    refs:
    - master
  tags:
  - recon-prod

stages:
- build
- deploy

.build: &build
  stage: build
  extends:
  - .expand_env
  script:
  - docker build -f docker/client_portal/reporting_tool_server_dockerfile_DEV -t ${CI_REGISTRY}/${NAMESPACE}/reporting_tool:${CI_COMMIT_REF_SLUG} . || { echo "Image failed to build"; exit 1; }
  - docker push ${CI_REGISTRY}/${NAMESPACE}/reporting_tool:${CI_COMMIT_REF_SLUG} || { echo "Image failed to push"; exit 1; }
  - docker build -f docker/client_portal/reporting_tool_client_dockerfile -t ${CI_REGISTRY}/${NAMESPACE}/reporting_tool_front:${CI_COMMIT_REF_SLUG} . || { echo "Image failed to build"; exit 1; }
  - docker push ${CI_REGISTRY}/${NAMESPACE}/reporting_tool_front:${CI_COMMIT_REF_SLUG} || { echo "Image failed to push"; exit 1; }
  - docker build -f docker/client_portal/order_portal_server_dockerfile_DEV -t ${CI_REGISTRY}/${NAMESPACE}/order_portal:${CI_COMMIT_REF_SLUG} . || { echo "Image failed to build"; exit 1; }
  - docker push ${CI_REGISTRY}/${NAMESPACE}/order_portal:${CI_COMMIT_REF_SLUG} || { echo "Image failed to push"; exit 1; }

.deploy: &deploy
  stage: deploy
  extends:
  - .expand_env
  script:
  - docker rm -f recon_ai_db client_portal_db reporting_tool reporting_tool_front order_portal || echo "Almost safe to ignore, containers failed to remove";
  - docker network rm ${DOCKER_NETWORK} || echo "Almost safe to ignore, netwoirk failed to remove";
  - docker network create ${DOCKER_NETWORK} || echo "Almost safe to ignore, netwoirk failed to create";
  - docker run --restart=always -d                              --network ${DOCKER_NETWORK} --env-file ${ENV_DB_AI}     -v ${ROOT_PATH}/recon_ai_db:/var/lib/postgresql/data      --name recon_ai_db postgres:12.3-alpine                                                || { echo "Database failed to start"; exit 1; }
  - docker run --restart=always -d                              --network ${DOCKER_NETWORK} --env-file ${ENV_DB_PORTAL} -v ${ROOT_PATH}/client_portal_db:/var/lib/postgresql/data --name client_portal_db postgres:12.3-alpine                                           || { echo "Database failed to start"; exit 1; }
  - docker run --restart=always -d -p ${PUBLIC_PORT}:8000       --network ${DOCKER_NETWORK} --env-file ${ENV}                                                                     --name reporting_tool ${CI_REGISTRY}/${NAMESPACE}/reporting_tool:${CI_COMMIT_REF_SLUG} || { echo "Reporting tool failed to start"; exit 1; }
  - docker run --restart=always -d -p ${PUBLIC_PORT_FRONT}:4200 --network ${DOCKER_NETWORK} --env-file ${ENV_FRONT}                                                               --name reporting_tool_front ${CI_REGISTRY}/${NAMESPACE}/reporting_tool_front:${CI_COMMIT_REF_SLUG} || { echo "Reporting tool front failed to start"; exit 1; }
  - docker run --restart=always -d -p ${PUBLIC_PORT_ORDER}:8000 --network ${DOCKER_NETWORK} --env-file ${ENV_ORDER}                                                               --name order_portal ${CI_REGISTRY}/${NAMESPACE}/order_portal:${CI_COMMIT_REF_SLUG} || { echo "Order portal failed to start"; exit 1; }

build_dev:
  extends:
  - .env_dev
  - .build

build_prod:
  extends:
  - .env_prod
  - .build
  when: manual
  allow_failure: false

deploy_dev:
  extends:
  - .env_dev
  - .deploy

deploy_prod:
  extends:
  - .env_prod
  - .deploy
