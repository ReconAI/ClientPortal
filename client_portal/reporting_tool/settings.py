"""
Django settings for reporting_tool project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jq)oglowie!vb8rz3h+zo(bc(*!_ops)7#5dbbe&88cc#^-(1-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') not in ['False', '0']

ALLOWED_HOSTS = [os.environ.get('ALLOWED_HOSTS'), '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'reporting_tool',
    'recon_db_manager',
    'drf_yasg',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

ROOT_URLCONF = 'reporting_tool.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['{}/{}'.format(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'reporting_tool.authentication.TokenAuthentication',
    ],
    'EXCEPTION_HANDLER': 'reporting_tool.exception_handlers.exception_handler'
}

AUTH_USER_MODEL = 'reporting_tool.User'

WSGI_APPLICATION = 'reporting_tool.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

RECON_AI_CONNECTION_NAME = 'recon_ai_db'

DATABASES = {
    'default': {
        'ENGINE': '{}.{}'.format('django.db.backends',
                                 os.environ.get('CLIENT_PORTAL_DB_ENGINE',
                                                'sqlite3')),
        'NAME': os.environ.get('CLIENT_PORTAL_DB_NAME', ''),
        'USER': os.environ.get('CLIENT_PORTAL_DB_USER', ''),
        'PASSWORD': os.environ.get('CLIENT_PORTAL_DB_PASSWORD', ''),
        'HOST': os.environ.get('CLIENT_PORTAL_DB_HOST', ''),
        'PORT': os.environ.get('CLIENT_PORTAL_DB_PORT', '')
    },
    RECON_AI_CONNECTION_NAME: {
        'ENGINE': '{}.{}'.format('django.db.backends',
                                 os.environ.get('RECON_AI_DB_ENGINE',
                                                'sqlite3')),
        'NAME': os.environ.get('RECON_AI_DB_NAME', ''),
        'USER': os.environ.get('RECON_AI_DB_USER', ''),
        'PASSWORD': os.environ.get('RECON_AI_DB_PASSWORD', ''),
        'HOST': os.environ.get('RECON_AI_DB_HOST', ''),
        'PORT': os.environ.get('RECON_AI_DB_PORT', '')
    }
}

DATABASE_ROUTERS = ['reporting_tool.db_routers.ReconDBRouter']

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AWS_IAM_USER_MANAGER = os.environ.get('AWS_IAM_SYNC_MANAGER',
                                      'reporting_tool.managers.DummyIaMUserManager')
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID', '')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY', '')
AWS_IAM_USER_GROUP = os.environ.get('AWS_IAM_USER_GROUP', '')

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

CLIENT_APP_SHEMA_HOST_PORT = os.environ.get('CLIENT_APP_SHEMA_HOST_PORT') # like http://127.0.0.1:8000